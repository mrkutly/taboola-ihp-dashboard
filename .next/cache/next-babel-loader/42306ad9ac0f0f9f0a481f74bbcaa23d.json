{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/mark.sauer.utley/Development/ihp/client/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport Page from '../components/Page';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {}; // This block crawls the page to see if there are any mutations or queries that need to be run before render\n    // It fires them before rendering and then returns that data into pageProps\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // this exposes the query to the user\n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      type: \"image/x-icon\",\n      href: \"/favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Implementation Health\")), __jsx(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/mark.sauer.utley/Development/ihp/client/pages/_app.tsx"],"names":["App","Head","Page","MyApp","getInitialProps","Component","ctx","pageProps","query","render","props"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAqC,UAArC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAMA,MAAMC,KAAN,SAAoBH,GAApB,CAAyC;AACxC,eAAaI,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAA2E;AAC1E,QAAIC,SAAoB,GAAG,EAA3B,CAD0E,CAE1E;AACA;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC9BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACA,KANyE,CAO1E;;;AACAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKG,KAAtC;AAEA,WACC,4BACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,GAAG,EAAC,eADL;AAEC,MAAA,IAAI,EAAC,cAFN;AAGC,MAAA,IAAI,EAAC,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAND,CADD,EASC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CATD,CADD;AAeA;;AA/BuC;;AAkCzC,eAAeJ,KAAf","sourcesContent":["import App, { AppInitialProps } from 'next/app';\nimport Head from 'next/head';\nimport Page from '../components/Page';\n\ninterface PageProps {\n\tquery?: string\n}\n\nclass MyApp extends App<AppInitialProps> {\n\tstatic async getInitialProps({ Component, ctx }): Promise<AppInitialProps> {\n\t\tlet pageProps: PageProps = {};\n\t\t// This block crawls the page to see if there are any mutations or queries that need to be run before render\n\t\t// It fires them before rendering and then returns that data into pageProps\n\t\tif (Component.getInitialProps) {\n\t\t\tpageProps = await Component.getInitialProps(ctx);\n\t\t}\n\t\t// this exposes the query to the user\n\t\tpageProps.query = ctx.query;\n\t\treturn { pageProps };\n\t}\n\n\trender() {\n\t\tconst { Component, pageProps } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Head>\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"shortcut icon\"\n\t\t\t\t\t\ttype=\"image/x-icon\"\n\t\t\t\t\t\thref=\"/favicon.ico\"\n\t\t\t\t\t/>\n\t\t\t\t\t<title>Implementation Health</title>\n\t\t\t\t</Head>\n\t\t\t\t<Page>\n\t\t\t\t\t<Component {...pageProps} />\n\t\t\t\t</Page>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}