{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/mark.sauer.utley/Development/ihp/client/pages/analysis/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Adapter from '../../utils/Adapter';\n\nvar Analysis = function Analysis() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(null),\n      analysisData = _useState3[0],\n      setAnalysisData = _useState3[1];\n\n  var _useState4 = useState(null),\n      dateRange = _useState4[0],\n      setDateRange = _useState4[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data, _data$data$, json_response, daterange;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Adapter.getShortAnalysis(1010748);\n\n              case 3:\n                data = _context.sent;\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                _data$data$ = data.data[0], json_response = _data$data$.json_response, daterange = _data$data$.daterange;\n                setAnalysisData(json_response);\n                setDateRange(daterange);\n                setLoading(false);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                setError(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  if (loading) return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"error \", error.message);\n  var mappedData = analysisData.map(function (datum) {\n    // console.log(datum);\n    return __jsx(\"div\", {\n      key: datum.MODE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, datum.MODE);\n  });\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, dateRange), mappedData);\n};\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/mark.sauer.utley/Development/ihp/client/pages/analysis/index.tsx"],"names":["useEffect","useState","Adapter","Analysis","loading","setLoading","error","setError","analysisData","setAnalysisData","dateRange","setDateRange","getData","getShortAnalysis","data","json_response","daterange","message","mappedData","map","datum","MODE"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,GAAM;AAAA,kBACjBF,QAAQ,CAAC,IAAD,CADS;AAAA,MACxCG,OADwC;AAAA,MAC/BC,UAD+B;;AAAA,mBAErBJ,QAAQ,CAAC,IAAD,CAFa;AAAA,MAExCK,KAFwC;AAAA,MAEjCC,QAFiC;;AAAA,mBAGPN,QAAQ,CAAC,IAAD,CAHD;AAAA,MAGxCO,YAHwC;AAAA,MAG1BC,eAH0B;;AAAA,mBAIbR,QAAQ,CAAC,IAAD,CAJK;AAAA,MAIxCS,SAJwC;AAAA,MAI7BC,YAJ6B;;AAM/CX,EAAAA,SAAS,CAAC,YAAY;AAAA,aACNY,OADM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACrB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE0CV,OAAO,CAACW,gBAAR,CAAyB,OAAzB,CAF1C;;AAAA;AAEQC,gBAAAA,IAFR;AAGE;AAHF,8BAIuCA,IAAI,CAACA,IAAL,CAAU,CAAV,CAJvC,EAIUC,aAJV,eAIUA,aAJV,EAIyBC,SAJzB,eAIyBA,SAJzB;AAKEP,gBAAAA,eAAe,CAACM,aAAD,CAAf;AACAJ,gBAAAA,YAAY,CAACK,SAAD,CAAZ;AACAX,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAPF;AAAA;;AAAA;AAAA;AAAA;AASEE,gBAAAA,QAAQ,aAAR;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA;AAAA;;AAcrBK,IAAAA,OAAO;AACP,GAfQ,EAeN,EAfM,CAAT;AAiBA,MAAIR,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,KAAK,CAACW,OAAjB,CAAP;AAEX,MAAMC,UAAU,GAAGV,YAAY,CAACW,GAAb,CAClB,UAACC,KAAD,EAAwB;AACvB;AACA,WAAO;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,KAAK,CAACC,IAA7B,CAAP;AACA,GAJiB,CAAnB;AAMA,SACC,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,SAAL,CADD,EAEEQ,UAFF,CADD;AAMA,CAtCD;;AAwCA,eAAef,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Adapter from '../../utils/Adapter';\n\nconst Analysis: React.FunctionComponent = () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(null);\n\tconst [analysisData, setAnalysisData] = useState(null);\n\tconst [dateRange, setDateRange] = useState(null);\n\n\tuseEffect((): void => {\n\t\tasync function getData(): Promise<void> {\n\t\t\ttry {\n\t\t\t\tconst data: ShortAnalysisResult = await Adapter.getShortAnalysis(1010748);\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\t\t\tconst { json_response, daterange } = data.data[0];\n\t\t\t\tsetAnalysisData(json_response);\n\t\t\t\tsetDateRange(daterange);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t}\n\t\t}\n\n\t\tgetData();\n\t}, []);\n\n\tif (loading) return <h1>loading...</h1>;\n\tif (error) return <h1>error {error.message}</h1>;\n\n\tconst mappedData = analysisData.map(\n\t\t(datum): JSX.Element => {\n\t\t\t// console.log(datum);\n\t\t\treturn <div key={datum.MODE}>{datum.MODE}</div>;\n\t\t},\n\t);\n\treturn (\n\t\t<>\n\t\t\t<h1>{dateRange}</h1>\n\t\t\t{mappedData}\n\t\t</>\n\t);\n};\n\nexport default Analysis;\n"]},"metadata":{},"sourceType":"module"}