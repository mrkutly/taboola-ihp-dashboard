{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar headers = {\n  Accepts: 'application/json',\n  'Cache-Control': 'no-cache',\n  'Content-Type': 'application/json'\n};\nvar Adapter = {\n  getPublisherStats: function () {\n    var _getPublisherStats = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(publisher) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"\".concat(process.env.BACKEND_URL, \"/dataframe_stats?publisher=\").concat(publisher), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    function getPublisherStats(_x) {\n      return _getPublisherStats.apply(this, arguments);\n    }\n\n    return getPublisherStats;\n  }(),\n  getPublisherAnalysisJson: function () {\n    var _getPublisherAnalysisJson = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(publisher) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"\".concat(process.env.BACKEND_URL, \"/data_json?publisher=\").concat(publisher), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 3:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res.json());\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    function getPublisherAnalysisJson(_x2) {\n      return _getPublisherAnalysisJson.apply(this, arguments);\n    }\n\n    return getPublisherAnalysisJson;\n  }(),\n  getShortAnalysis: function () {\n    var _getShortAnalysis = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(publisherId) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"\".concat(process.env.BACKEND_URL, \"/impl-short-pv-reader?publisher=\").concat(publisherId), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res.json());\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    function getShortAnalysis(_x3) {\n      return _getShortAnalysis.apply(this, arguments);\n    }\n\n    return getShortAnalysis;\n  }(),\n  getLongAnalysis: function () {\n    var _getLongAnalysis = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(publisherId) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return fetch(\"\".concat(process.env.BACKEND_URL, \"/impl-pv-reader?publisher=\").concat(publisherId), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 3:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", res.json());\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    function getLongAnalysis(_x4) {\n      return _getLongAnalysis.apply(this, arguments);\n    }\n\n    return getLongAnalysis;\n  }(),\n  getModes: function () {\n    var _getModes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(publisherId) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return fetch(\"\".concat(process.env.BACKEND_URL, \"/impl-list-modes?publisher=\").concat(publisherId), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 3:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", res.json());\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    function getModes(_x5) {\n      return _getModes.apply(this, arguments);\n    }\n\n    return getModes;\n  }()\n};\nexport default Adapter;","map":{"version":3,"sources":["/Users/mark.sauer.utley/Development/ihp/client/utils/Adapter.ts"],"names":["headers","Accepts","Adapter","getPublisherStats","publisher","fetch","process","env","BACKEND_URL","method","res","json","getPublisherAnalysisJson","getShortAnalysis","publisherId","getLongAnalysis","getModes"],"mappings":";;AAQA,IAAMA,OAA6B,GAAG;AACrCC,EAAAA,OAAO,EAAE,kBAD4B;AAErC,mBAAiB,UAFoB;AAGrC,kBAAgB;AAHqB,CAAtC;AAMA,IAAMC,OAAO,GAAG;AACTC,EAAAA,iBADS;AAAA;AAAA;AAAA,8CACSC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGKC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,WAAhB,wCAAyDJ,SAAzD,GAAsE;AAC5FK,gBAAAA,MAAM,EAAE,KADoF;AAE5FT,gBAAAA,OAAO,EAAPA;AAF4F,eAAtE,CAHV;;AAAA;AAGPU,cAAAA,GAHO;AAAA,+CAONA,GAAG,CAACC,IAAJ,EAPM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYTC,EAAAA,wBAZS;AAAA;AAAA;AAAA,+CAYgBR,SAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAcKC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,WAAhB,kCAAmDJ,SAAnD,GAAgE;AACtFK,gBAAAA,MAAM,EAAE,KAD8E;AAEtFT,gBAAAA,OAAO,EAAPA;AAFsF,eAAhE,CAdV;;AAAA;AAcPU,cAAAA,GAdO;AAAA,gDAkBNA,GAAG,CAACC,IAAJ,EAlBM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBTE,EAAAA,gBAvBS;AAAA;AAAA;AAAA,+CAuBQC,WAvBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAyBKT,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,WAAhB,6CAA8DM,WAA9D,GAA6E;AACnGL,gBAAAA,MAAM,EAAE,KAD2F;AAEnGT,gBAAAA,OAAO,EAAPA;AAFmG,eAA7E,CAzBV;;AAAA;AAyBPU,cAAAA,GAzBO;AAAA,gDA6BNA,GAAG,CAACC,IAAJ,EA7BM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkCTI,EAAAA,eAlCS;AAAA;AAAA;AAAA,+CAkCOD,WAlCP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoCKT,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,WAAhB,uCAAwDM,WAAxD,GAAuE;AAC7FL,gBAAAA,MAAM,EAAE,KADqF;AAE7FT,gBAAAA,OAAO,EAAPA;AAF6F,eAAvE,CApCV;;AAAA;AAoCPU,cAAAA,GApCO;AAAA,gDAwCNA,GAAG,CAACC,IAAJ,EAxCM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6CTK,EAAAA,QA7CS;AAAA;AAAA;AAAA,+CA6CAF,WA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA+CKT,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,WAAhB,wCAAyDM,WAAzD,GAAwE;AAC9FL,gBAAAA,MAAM,EAAE,KADsF;AAE9FT,gBAAAA,OAAO,EAAPA;AAF8F,eAAxE,CA/CV;;AAAA;AA+CPU,cAAAA,GA/CO;AAAA,gDAmDNA,GAAG,CAACC,IAAJ,EAnDM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AA0DA,eAAeT,OAAf","sourcesContent":["interface Header {\n\tAccepts: string;\n\t'Cache-Control': string;\n\t'Content-Type': string;\n}\n\ntype HeadersInitInterface = Header & HeadersInit;\n\nconst headers: HeadersInitInterface = {\n\tAccepts: 'application/json',\n\t'Cache-Control': 'no-cache',\n\t'Content-Type': 'application/json',\n};\n\nconst Adapter = {\n\tasync getPublisherStats(publisher: string): Promise<object> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${process.env.BACKEND_URL}/dataframe_stats?publisher=${publisher}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders,\n\t\t\t});\n\t\t\treturn res.json();\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t},\n\tasync getPublisherAnalysisJson(publisher: string): Promise<object> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${process.env.BACKEND_URL}/data_json?publisher=${publisher}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders,\n\t\t\t});\n\t\t\treturn res.json();\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t},\n\tasync getShortAnalysis(publisherId: number): Promise<object> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${process.env.BACKEND_URL}/impl-short-pv-reader?publisher=${publisherId}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders,\n\t\t\t});\n\t\t\treturn res.json();\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t},\n\tasync getLongAnalysis(publisherId: number): Promise<object> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${process.env.BACKEND_URL}/impl-pv-reader?publisher=${publisherId}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders,\n\t\t\t});\n\t\t\treturn res.json();\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t},\n\tasync getModes(publisherId: number): Promise<object> {\n\t\ttry {\n\t\t\tconst res = await fetch(`${process.env.BACKEND_URL}/impl-list-modes?publisher=${publisherId}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders,\n\t\t\t});\n\t\t\treturn res.json();\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t},\n};\n\nexport default Adapter;\n"]},"metadata":{},"sourceType":"module"}