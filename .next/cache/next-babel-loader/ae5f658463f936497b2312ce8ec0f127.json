{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/mark.sauer.utley/Development/ihp/client/pages/analysis/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Adapter from '../../utils/Adapter';\n\nvar Analysis = function Analysis() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(null),\n      analysisData = _useState3[0],\n      setAnalysisData = _useState3[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Adapter.getShortAnalysis(1010748);\n\n              case 3:\n                data = _context.sent;\n                setAnalysisData(data);\n                setLoading(false);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                setError(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  console.log(analysisData);\n  if (loading) return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"error \", error.message);\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, _JSON$stringify(analysisData));\n};\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/mark.sauer.utley/Development/ihp/client/pages/analysis/index.tsx"],"names":["useEffect","useState","Adapter","Analysis","loading","setLoading","error","setError","analysisData","setAnalysisData","getData","getShortAnalysis","data","console","log","message"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,GAAM;AAAA,kBACjBF,QAAQ,CAAC,IAAD,CADS;AAAA,MACxCG,OADwC;AAAA,MAC/BC,UAD+B;;AAAA,mBAErBJ,QAAQ,CAAC,IAAD,CAFa;AAAA,MAExCK,KAFwC;AAAA,MAEjCC,QAFiC;;AAAA,mBAGPN,QAAQ,CAAC,IAAD,CAHD;AAAA,MAGxCO,YAHwC;AAAA,MAG1BC,eAH0B;;AAK/CT,EAAAA,SAAS,CAAC,YAAY;AAAA,aACNU,OADM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE0CR,OAAO,CAACS,gBAAR,CAAyB,OAAzB,CAF1C;;AAAA;AAEQC,gBAAAA,IAFR;AAGEH,gBAAAA,eAAe,CAACG,IAAD,CAAf;AACAP,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAJF;AAAA;;AAAA;AAAA;AAAA;AAMEE,gBAAAA,QAAQ,aAAR;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA;AAAA;;AAWrBG,IAAAA,OAAO;AACP,GAZQ,EAYN,EAZM,CAAT;AAaAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,KAAK,CAACS,OAAjB,CAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,gBAAeP,YAAf,CAAJ,CAAP;AACA,CAtBD;;AAwBA,eAAeL,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Adapter from '../../utils/Adapter';\n\nconst Analysis: React.FunctionComponent = () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(null);\n\tconst [analysisData, setAnalysisData] = useState(null);\n\n\tuseEffect((): void => {\n\t\tasync function getData(): Promise<void> {\n\t\t\ttry {\n\t\t\t\tconst data: ShortAnalysisResult = await Adapter.getShortAnalysis(1010748);\n\t\t\t\tsetAnalysisData(data);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t}\n\t\t}\n\n\t\tgetData();\n\t}, []);\n\tconsole.log(analysisData);\n\tif (loading) return <h1>loading...</h1>;\n\tif (error) return <h1>error {error.message}</h1>;\n\treturn <p>{JSON.stringify(analysisData)}</p>;\n};\n\nexport default Analysis;\n"]},"metadata":{},"sourceType":"module"}